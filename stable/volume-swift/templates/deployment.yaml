apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: {{ .Chart.Name }}
    release: {{ template "releaseName" . }}
    heritage: {{ .Release.Service }}
    component: {{ .Chart.Name }}
  annotations:
    version: "{{ .Chart.Version }}"
spec:
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
      chart: {{ .Chart.Name }}
      release: {{ template "releaseName" . }}
      heritage: {{ .Release.Service }}
      component: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: {{ .Chart.Name }}
        release: {{ template "releaseName" . }}
        heritage: {{ .Release.Service }}
        component: {{ .Chart.Name }}
      annotations:
        version: "{{ .Chart.Version }}"
    spec:
      hostname: {{ .Chart.Name | quote }}
      subdomain: {{ template "fullname" . }}
      hostNetwork: {{ template "hostNetwork" . }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
{{ include "imagePullSecrets" . | indent 6 }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image }}
        imagePullPolicy: {{ template "imagePullPolicy" dict "root" . }}
        env:
          - name: INITIALIZE
            value: 'yes'
          - name: USERNAME
            value: {{ .Values.username  | quote }}
          - name: PASSWORD
            value: {{ .Values.password | quote  }}
          - name: TENANT_NAME
            value: {{ .Values.tenantName | quote  }}
          - name: IPADDRESS
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        lifecycle:
          postStart:
            exec:
              command:
                - "/bin/bash"
                - "-c"
                - >
                  SWIFT_READY="error" ;
                  while [[ ! -z ${SWIFT_READY} ]]; do
                      SWIFT_READY=$(swift --auth-version 2 -A http://${IPADDRESS}:5000/v2.0 -K ${PASSWORD} -U ${USERNAME} --os-tenant-name ${TENANT_NAME} list 2>&1) ;
                  done ;
                  sleep 3 ;
                  SWIFT_READY="error" ;
                  while [[ ! -z ${SWIFT_READY} ]]; do
                    SWIFT_READY=$(swift --auth-version 2 -A http://${IPADDRESS}:5000/v2.0 -K ${PASSWORD} -U ${USERNAME} --os-tenant-name ${TENANT_NAME} list 2>&1) ;
                  done ;
                  swift --auth-version 2 -A http://${IPADDRESS}:5000/v2.0 -K ${PASSWORD} -U ${USERNAME} --os-tenant-name ${TENANT_NAME} post {{ .Values.containerName }} ;
                  echo "Done" > /swift_up ;
        livenessProbe:
          tcpSocket:
            port: 5000
        readinessProbe:
          exec:
            command:
              - cat
              - /swift_up
        command:
          - "/bin/bash"
          - "-c"
          - >
            /sbin/my_init
        ports:
          - name: horizon
            containerPort: 80
            protocol: TCP
          - name: keystone
            containerPort: 5000
            protocol: TCP
          - name: swiftbrowser
            containerPort: 8000
            protocol: TCP
          - name: objectstorage
            containerPort: 8080
            protocol: TCP
          - name: keystoneadmin
            containerPort: 35357
            protocol: TCP