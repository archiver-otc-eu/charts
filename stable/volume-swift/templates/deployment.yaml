apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: {{ .Chart.Name }}
    release: {{ template "releaseName" . }}
    heritage: {{ .Release.Service }}
    component: {{ .Chart.Name }}
  annotations:
    version: "{{ .Chart.Version }}"
spec:
  backoffLimit: 1
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: {{ .Chart.Name }}
        release: {{ template "releaseName" . }}
        heritage: {{ .Release.Service }}
        component: {{ .Chart.Name }}
      annotations:
        version: "{{ .Chart.Version }}"
    spec:
      hostname: {{ .Chart.Name | quote }}
      subdomain: {{ template "fullname" . }}
      hostNetwork: {{ template "hostNetwork" . }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
{{ include "imagePullSecrets" . | indent 6 }}
      containers:
      - name: {{ .Chart.Name }}
        image: onedata/dockswift:v2
        imagePullPolicy: {{ template "imagePullPolicy" dict "root" . }}
        env:
          - name: INITIALIZE
            value: 'yes'
          - name: IPADDRESS
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        readinessProbe:
          exec:
            command:
              - "/bin/bash"
              - "-c"
              - >
                SWIFT_READY="error" ;
                while [ -n "${SWIFT_READY}" ]; do SWIFT_READY=$(swift --auth-version 2 -A http://${IPADDRESS}:5000/v2.0 -K swift -U swift --os-tenant-name service list 2>&1); done ;
                # Sometimes swift returns internal server error few times
                # after first successful request
                sleep 3 ;
                while [ -n "${SWIFT_READY}" ]; do SWIFT_READY=$(swift --auth-version 2 -A http://${IPADDRESS}:5000/v2.0 -K swift -U swift --os-tenant-name service list 2>&1); done ;
#        livenessProbe:
#            exec:
#              command:
#              - "/bin/bash"
#              - "-c"
#              - >
#                curl -vvv http://localhost:8080/healthcheck ;
        command:
          - "/bin/bash"
          - "-c"
          - >
            /sbin/my_init
        ports:
          - name: horizon
            containerPort: 80
            protocol: TCP
          - name: keystone
            containerPort: 5000
            protocol: TCP
          - name: swiftbrowser
            containerPort: 8000
            protocol: TCP
          - name: objectstorage
            containerPort: 8080
            protocol: TCP
          - name: keystoneadmin
            containerPort: 35357
            protocol: TCP
