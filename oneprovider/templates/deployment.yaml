---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
            {
                "name": "wait-for-volume-s3-init",
                "image": "{{ .Values.wait_for.image }}",
                "imagePullPolicy": "{{ .Values.wait_for.imagePullPolicy }}",
{{ include "imagePullSecrets_json" . | indent 16 }}
                "args": [
                    "job", "{{ .Release.Name }}-volume-s3-init"
                ]
            },
            {
                "name": "wait-for-volume-ceph",
                "image": "{{ .Values.wait_for.image }}",
                "imagePullPolicy": "{{ .Values.wait_for.imagePullPolicy }}",
{{ include "imagePullSecrets_json" . | indent 16 }}
                "args": [
                    "pod", "-lapp={{ .Release.Name }}-volume-ceph"
                ]
            }
        ]'
    spec:
      hostname: node1
      subdomain: {{ template "fullname" . }}
{{ include "imagePullSecrets" . | indent 6 }}
      volumes:
      - name: nfs
        nfs:
          server: {{ template "volume-nfs_service_url" .}}
          path: "/exports"
          readOnly: false
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
          - containerPort: 53
          - containerPort: 80
          - containerPort: 443
          - containerPort: 5555
          - containerPort: 5556
          - containerPort: 6665
          - containerPort: 6666
          - containerPort: 7443
          - containerPort: 8443
          - containerPort: 8876
          - containerPort: 8877
          - containerPort: 9443
        lifecycle:
          preStop:
            exec:
              command:
                - "sh"
                - "-c"
                - >
                  op_panel stop ;
                  op_worker stop ;
                  cluster_manager stop ;
                  /etc/init.d/couchbase-server stop ;
                  pkill -f oneprovider.py ;
        readinessProbe:
          exec:
            command:
              - "/bin/bash"
              - "-c"
              - >
                service=provider ;
                user="$(curl -k -u admin:password -sS --tlsv1.2 -X GET 'https://localhost:9443/api/v3/onepanel/users/user')";
                if [[ "$user" == "" ]] ; then exit 1; else  exit 0;  fi ;
        env:
          #- name: ONEPANEL_DEBUG_MODE
          #  value: "true"
          - name: ONEPANEL_BATCH_MODE
            value: "true"
          - name: ONEPROVIDER_CONFIG
            value: |
              cluster:
                domainName: "{{ template "service_url" . }}"
                nodes:
                  n1:
                    hostname: "node1"
                managers:
                  mainNode: "n1"
                  nodes:
                    - "n1"
                workers:
                  nodes:
                    - "n1"
                databases:
                  nodes:
                    - "n1"
                storages:
                  local:
                    type: "posix"
                    mountPoint: "/volumes/storage"
                  nfs:
                    type: "posix"
                    mountPoint: "/nfs"
                  s3:
                   type: "s3"
                   hostname: {{ template "volume-s3_service_url" . }}:8000
                   bucketName: test1
                   accessKey: accessKey1
                   secretKey: verySecretKey1
                   insecure: true
                  ceph:
                    type: "posix"
                    mountPoint: "/mnt"
                  #S3:
                  #  type: s3
                  #  hostname: {{ template "volume-s3_service_url" . }}:8000
                  #  bucketName: test1
                  #  accessKey: accessKey1
                  #  secretKey: verySecretKey1
                  #  insecure: true
              oneprovider:
                register: true
                name: {{ template "fullname" . }}
                redirectionPoint: "https://{{ template "service_url" . }}" # OR IP ADDRESS
                geoLatitude: 55.333
                geoLongitude: 55.333
              onezone:
                domainName: "{{ template "onezone_service_url" . }}"
              onepanel:
                users:
                  "admin":
                    password: "password"
                    userRole: "admin"
                  "user":
                    password: "password"
                    userRole: "regular"
        volumeMounts:
        - mountPath: /nfs
          name: nfs