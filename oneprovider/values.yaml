# Default values for oneprovider.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image: onedata/oneprovider:3.0.0-rc16
imagePullPolicy: IfNotPresent
serviceType: ClusterIP

wait_for:
  image: onedata/k8s-wait-for:v1.0.1
  imagePullPolicy: IfNotPresent

# When running multiple copies of oneprovider as a part of a helm release
# each of oneprovider charts may be give a suffix, so that service names
# do not collide. This is propagated to all oneprovider chart dependencies.
suffix: &providerSuffix ''

# An address of Onezone service (mandatory)
# support for multiple scenarios, see examples bellow
onezone_service_url: &onezone_service_url
  # 1. no address is needed
  # the assumption is made that onezone is part of the same helm release
  # the disableSuffix flag, prevents suffix to be appended to onezone service name
  type: auto-generate
  disableSuffix: true

  # 2. a full address of an onezone (without http(s))
  # note that external onezones will not be able to communicate to k8s deployed oneprovider
  # type: http
  # address: beta.onedata.org

  # 3. only service name is sufficient, the namespace parameter is optional
  # type: k8s-service
  # service_name: rc14-onezone
  # namespace: default

# oneprovider name, if empty defaults to a chart name
name: ''

# Resources requested by oneprovider
cpu: 1.5
memory: 4Gi

# Coordinates of a Oneprovider on a onezone map
geoLatitude: 55.333
geoLongitude: 55.333

# Log level of the processes in the container
log_level: "info"

# Enable loading oneprovider configuration from ONEPROVIDER_CONFIG env variable
onepanel_batch_mode_enabled: true

# If set true, oneprovider will not be deployed on the same node as other oneproviders
# or onezones that are part of this deployment
onedata_anti_affinity_enabled: false

# List of oneprovider onepanel users with administrative privileges
onepanel_admin_users:
  - login: admin
    password: password

# List of oneprovider onepanel regular users
onepanel_users:
  - login: user
    password: password

# Create oneclient instance that will connect to this oneprovider
oneclient:
  enabled: false
  onezone_service_url: *onezone_service_url
  suffix: *providerSuffix

# Create onedata-cli instance that will have a context of this oneprovider
# and this provider onezone
onedata-cli:
  enabled: false
  suffix: *providerSuffix
  onezone_service_url: *onezone_service_url

# Create S3 storage server and connect with oneprovider
volume-s3:
  enabled: false
  suffix: *providerSuffix
  insecure: true

# Create CEPH storage server and connect with oneprovider
volume-ceph:
  enabled: false
  suffix: *providerSuffix
  insecure: true

# Create NFS storage server and connect with oneprovider with tested default values
volume-nfs:
  enabled: false
  suffix: *providerSuffix
  container_mount_path: /volumes/nfs
  storage_claim: 1T
  mount_options: "soft,intr,timeo=10"

# Create gluster storage server and connect with oneprovider with tested default values
volume-gluster:
  insecure: true
  enabled: false
  suffix: *providerSuffix